SHORT Main memory bandwidth in MBytes/s

EVENTSET
FIXC0 INSTR_RETIRED_ANY
FIXC1 CPU_CLK_UNHALTED_CORE
FIXC2 CPU_CLK_UNHALTED_REF
PMC0  L1D_REPLACEMENT
PMC1  L1D_M_EVICT
PMC2  L2_LINES_IN_ALL
PMC3  L2_TRANS_L2_WB
PWR0  PWR_PKG_ENERGY
PWR1  PWR_PP0_ENERGY
PWR3  PWR_DRAM_ENERGY
MBOX0C0 CAS_COUNT_RD
MBOX0C1 CAS_COUNT_WR
MBOX1C0 CAS_COUNT_RD
MBOX1C1 CAS_COUNT_WR
MBOX2C0 CAS_COUNT_RD
MBOX2C1 CAS_COUNT_WR
MBOX3C0 CAS_COUNT_RD
MBOX3C1 CAS_COUNT_WR
MBOX4C0 CAS_COUNT_RD
MBOX4C1 CAS_COUNT_WR
MBOX5C0 CAS_COUNT_RD
MBOX5C1 CAS_COUNT_WR
MBOX6C0 CAS_COUNT_RD
MBOX6C1 CAS_COUNT_WR
MBOX7C0 CAS_COUNT_RD
MBOX7C1 CAS_COUNT_WR
QBOX0C0 RXL_FLITS_G0_DATA
QBOX1C0 RXL_FLITS_G0_DATA
QBOX0C2 TXL_FLITS_G0_DATA
QBOX1C2 TXL_FLITS_G0_DATA



METRICS
clock_MHz  1.E-06*(FIXC1/FIXC2)/inverseClock
cpi  FIXC1/FIXC0
inst_retired FIXC0
l1_l2_load_band  1.0E-06*PMC0*64.0/time
l1_l2_evict_band  1.0E-06*PMC1*64.0/time
l1_l2_total_band  1.0E-06*(PMC0+PMC1)*64.0/time
l2_l3_load_band  1.0E-06*PMC2*64.0/time
l2_l3_evict_band  1.0E-06*PMC3*64.0/time
l2_l3_total_band  1.0E-06*(PMC2+PMC3)*64.0/time
mem_read_band 1.0E-06*(MBOX0C0+MBOX1C0+MBOX2C0+MBOX3C0+MBOX4C0+MBOX5C0+MBOX6C0+MBOX7C0)*64.0/time
mem_write_band [MBytes/s] 1.0E-06*(MBOX0C1+MBOX1C1+MBOX2C1+MBOX3C1+MBOX4C1+MBOX5C1+MBOX6C1+MBOX7C1)*64.0/time
mem_total_band 1.0E-06*(MBOX0C0+MBOX1C0+MBOX2C0+MBOX3C0+MBOX4C0+MBOX5C0+MBOX6C0+MBOX7C0+MBOX0C1+MBOX1C1+MBOX2C1+MBOX3C1+MBOX4C1+MBOX5C1+MBOX6C1+MBOX7C1)*64.0/time
power_pkg PWR0/time
power_pp0 PWR1/time
power_dram PWR3/time
qpi_recv_band 1.E-06*(QBOX0C0+QBOX1C0)*8/time
qpi_send_band 1.E-06*(QBOX0C2+QBOX1C2)*8/time



LONG
Formulas:
clock_MHz = 1.E-06*(CPU_CLK_UNHALTED_CORE/CPU_CLK_UNHALTED_REF)/inverseClock
cpi = CPU_CLK_UNHALTED_CORE/INSTR_RETIRED_ANY
inst_retired = INSTR_RETIRED_ANY
l1_l2_load_band = 1.0E-06*L1D_REPLACEMENT*64.0/time
l1_l2_evict_band = 1.0E-06*L1D_M_EVICT*64.0/time
l1_l2_total_band = 1.0E-06*(L1D_REPLACEMENT+L1D_M_EVICT)*64.0/time
l2_l3_load_band = 1.0E-06*L2_LINES_IN_ALL*64.0/time
l2_l3_evict_band = 1.0E-06*L2_TRANS_L2_WB*64.0/time
l2_l3_total_band = 1.0E-06*(L2_LINES_IN_ALL+L2_TRANS_L2_WB)*64.0/time
mem_read_band = 1.0E-06*(SUM(CAS_COUNT_RD))*64.0/runtime
mem_write_band = 1.0E-06*(SUM(CAS_COUNT_WR))*64.0/runtime
mem_total_band = 1.0E-06*(SUM(CAS_COUNT_RD)+SUM(CAS_COUNT_WR))*64.0/runtime
power_pkg = PWR_PKG_ENERGY/runtime
power_pp0 = PWR_PP0_ENERGY/runtime
power_dram = PWR_DRAM_ENERGY/runtime
qpi_recv_band = 1.E-06*(SUM(RXL_FLITS_G0_DATA))*8/time
qpi_send_band = 1.E-06*(SUM(TXL_FLITS_G0_DATA))*8/time
-
A suggestion for a performance group for monitoring Haswell EP systems. It
addresses cache, memory and NUMA traffic as well as energy consumption and some
basic informations like CPI or the CPU clock.
